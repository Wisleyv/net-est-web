{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Run Backend Tests",
			"type": "shell",
			"command": "${workspaceFolder}/backend/venv/Scripts/python.exe",
			"args": [
				"-m",
				"pytest",
				"-q"
			],
			"options": {
				"cwd": "${workspaceFolder}/backend"
			},
			"group": "test"
		},
		{
			"label": "Setup Backend Environment",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"Write-Host 'Setting up NET-EST Backend Environment...' -ForegroundColor Cyan; cd '${workspaceFolder}/backend'; if (Test-Path 'venv') { Write-Host 'Virtual environment exists, activating...' -ForegroundColor Green; .\\venv\\Scripts\\Activate.ps1; Write-Host 'Checking dependencies...' -ForegroundColor Blue; .\\venv\\Scripts\\pip.exe install --quiet fastapi uvicorn pydantic sentence-transformers psutil } else { Write-Host 'Creating new virtual environment...' -ForegroundColor Yellow; c:\\Python313\\python.exe -m venv venv --prompt 'NET-EST'; .\\venv\\Scripts\\Activate.ps1; Write-Host 'Installing dependencies...' -ForegroundColor Blue; .\\venv\\Scripts\\pip.exe install --upgrade pip setuptools wheel; .\\venv\\Scripts\\pip.exe install fastapi uvicorn[standard] pydantic pydantic-settings sentence-transformers transformers torch numpy scipy scikit-learn psutil python-multipart python-dotenv }; Write-Host 'Backend environment ready!' -ForegroundColor Green"
			],
			"group": "build"
		},
		{
			"label": "Start Backend Server",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"cd '${workspaceFolder}/backend'; if (Test-Path 'venv_new/Scripts/Activate.ps1') { .\\venv_new\\Scripts\\Activate.ps1; Write-Host 'Virtual environment activated' -ForegroundColor Green; python start_server.py } else { Write-Host 'Virtual environment not found!' -ForegroundColor Red; exit 1 }"
			],
			"options": {
				"cwd": "${workspaceFolder}/backend"
			},
			"group": {
				"kind": "build",
				"isDefault": false
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new"
			},
			"problemMatcher": [],
			"isBackground": true,
			"dependsOn": "Setup Backend Environment"
		},
		{
			"label": "Start Frontend Dev Server",
			"type": "shell",
			"command": "npm.cmd",
			"args": [
				"run",
				"dev"
			],
			"options": {
				"cwd": "${workspaceFolder}/frontend"
			},
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new"
			},
			"problemMatcher": [],
			"isBackground": true
		},
		{
			"label": "Build Frontend",
			"type": "shell",
			"command": "npm",
			"args": [
				"run",
				"build"
			],
			"options": {
				"cwd": "${workspaceFolder}/frontend"
			},
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always"
			},
			"problemMatcher": []
		},
		{
			"label": "Install Frontend Dependencies",
			"type": "shell",
			"command": "npm",
			"args": [
				"install"
			],
			"options": {
				"cwd": "${workspaceFolder}/frontend"
			},
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always"
			},
			"problemMatcher": []
		},
		{
			"label": "Install Missing Frontend Packages",
			"type": "shell",
			"command": "npm",
			"args": [
				"install",
				"react-hot-toast@^2.4.1"
			],
			"options": {
				"cwd": "${workspaceFolder}/frontend"
			},
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always"
			},
			"problemMatcher": []
		},
		{
			"label": "Clean Cache Files",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"Write-Host 'Cleaning Python cache files...' -ForegroundColor Yellow; Get-ChildItem -Path . -Recurse -Directory -Name '__pycache__' | ForEach-Object { Remove-Item -Path $_ -Recurse -Force }; Write-Host 'Cache cleanup complete!' -ForegroundColor Green"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always"
			},
			"problemMatcher": []
		},
		{
			"label": "Performance Monitor",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"Write-Host 'VS Code Process Analysis:' -ForegroundColor Cyan; Get-Process -Name 'Code*' | Format-Table Name, WorkingSet -AutoSize; Write-Host 'Cache directories:' -ForegroundColor Yellow; (Get-ChildItem -Path . -Recurse -Directory -Name '__pycache__' | Measure-Object).Count"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Setup Py312 Venv",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"if (!(Test-Path backend/.venv_py312)) { py -3.12 -m venv backend/.venv_py312 }; . backend/.venv_py312/Scripts/Activate.ps1; pip install -q --upgrade pip; pip install -q -r backend/requirements.txt; pip install -q pytest requests"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": []
		},
		{
			"label": "Run Backend Tests (Py312)",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				". backend/.venv_py312/Scripts/Activate.ps1; pytest backend/tests -q"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": [],
			"dependsOn": [
				"Setup Py312 Venv"
			],
			"group": "test"
		},
		{
			"label": "Environment Status Check",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"$env:WORKSPACEFOLDER = '${workspaceFolder}'; & '${workspaceFolder}/scripts/env_status_enhanced.ps1'"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		}
	]
}