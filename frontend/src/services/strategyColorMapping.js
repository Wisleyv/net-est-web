/**
 * Strategy Color Mapping Service
 * Defines colors and utilities for text simplification strategy visualization
 */

// Strategy color mapping as defined in the implementation plan
export const STRATEGY_COLORS = {
  'AS+': '#FF6B6B', // Red - Alteração de Sentido
  'DL+': '#4ECDC4', // Teal - Reorganização Posicional
  'EXP+': '#45B7D1', // Blue - Explicitação e Detalhamento
  'IN+': '#96CEB4', // Green - Manejo de Inserções
  'MOD+': '#FFEAA7', // Yellow - Reinterpretação Perspectiva
  'MT+': '#DDA0DD', // Plum - Otimização de Títulos
  'OM+': '#F0F0F0', // Light Gray - Supressão Seletiva (special)
  'PRO+': '#FFB347', // Orange - Desvio Semântico (manual only)
  'RF+': '#FF8A80', // Light Red - Reescrita Global
  'RD+': '#80CBC4', // Light Teal - Estruturação de Conteúdo
  'RP+': '#81C784', // Light Green - Fragmentação Sintática
  'SL+': '#64B5F6', // Light Blue - Adequação de Vocabulário
  'TA+': '#BA68C8', // Purple - Clareza Referencial
  'MV+': '#FFD54F'  // Amber - Alteração da Voz Verbal
};

// Strategy descriptions for tooltips
export const STRATEGY_DESCRIPTIONS = {
  'AS+': 'Alteração de Sentido - Mudança no significado para simplificação',
  'DL+': 'Reorganização Posicional - Reordenação de elementos textuais',
  'EXP+': 'Explicitação e Detalhamento - Adição de informações explicativas',
  'IN+': 'Manejo de Inserções - Adição de elementos facilitadores',
  'MOD+': 'Reinterpretação Perspectiva - Mudança de perspectiva narrativa',
  'MT+': 'Otimização de Títulos - Aprimoramento de títulos e cabeçalhos',
  'OM+': 'Supressão Seletiva - Remoção de elementos complexos',
  'PRO+': 'Desvio Semântico - Alteração semântica significativa',
  'RF+': 'Reescrita Global - Reestruturação completa do texto',
  'RD+': 'Estruturação de Conteúdo - Reorganização da estrutura textual',
  'RP+': 'Fragmentação Sintática - Divisão de períodos complexos',
  'SL+': 'Adequação de Vocabulário - Substituição lexical simplificadora',
  'TA+': 'Clareza Referencial - Esclarecimento de referências',
  'MV+': 'Alteração da Voz Verbal - Mudança entre voz ativa/passiva'
};

// Special tag handling rules
export const SPECIAL_TAG_RULES = {
  'OM+': {
    autoGenerated: false,
    description: 'Nunca gerada automaticamente - ativação manual apenas',
    isSpecial: true
  },
  'PRO+': {
    autoGenerated: false,
    description: 'Nunca gerada automaticamente - seleção manual apenas',
    isSpecial: true
  }
};

/**
 * Get color for a strategy
 * @param {string} strategy - Strategy code (e.g., 'AS+', 'SL+')
 * @returns {string} Hex color code
 */
export const getStrategyColor = (strategy) => {
  return STRATEGY_COLORS[strategy] || '#CCCCCC'; // Default gray for unknown strategies
};

/**
 * Get description for a strategy
 * @param {string} strategy - Strategy code
 * @returns {string} Strategy description
 */
export const getStrategyDescription = (strategy) => {
  return STRATEGY_DESCRIPTIONS[strategy] || 'Estratégia não reconhecida';
};

/**
 * Check if a strategy is special (manual only)
 * @param {string} strategy - Strategy code
 * @returns {boolean} True if strategy requires manual activation
 */
export const isSpecialStrategy = (strategy) => {
  return SPECIAL_TAG_RULES[strategy]?.isSpecial || false;
};

/**
 * Check if a strategy can be auto-generated
 * @param {string} strategy - Strategy code
 * @returns {boolean} True if strategy can be auto-generated
 */
export const canAutoGenerate = (strategy) => {
  return SPECIAL_TAG_RULES[strategy]?.autoGenerated !== false;
};

/**
 * Get all available strategies
 * @returns {Array} Array of strategy objects with code, color, and description
 */
export const getAllStrategies = () => {
  return Object.keys(STRATEGY_COLORS).map(strategy => ({
    code: strategy,
    color: getStrategyColor(strategy),
    description: getStrategyDescription(strategy),
    isSpecial: isSpecialStrategy(strategy),
    canAutoGenerate: canAutoGenerate(strategy)
  }));
};

/**
 * Generate CSS styles for strategy highlighting
 * @param {string} strategy - Strategy code
 * @param {number} opacity - Background opacity (0-1)
 * @returns {Object} CSS style object
 */
export const getStrategyStyles = (strategy, opacity = 0.3) => {
  const color = getStrategyColor(strategy);
  return {
    backgroundColor: color,
    backgroundOpacity: opacity,
    borderLeft: `3px solid ${color}`,
    color: '#000000', // Ensure text readability
  };
};

/**
 * Generate hover styles for strategy highlighting
 * @param {string} strategy - Strategy code
 * @returns {Object} CSS style object for hover state
 */
export const getStrategyHoverStyles = (strategy) => {
  const color = getStrategyColor(strategy);
  return {
    backgroundColor: color,
    backgroundOpacity: 0.5,
    borderLeft: `4px solid ${color}`,
    cursor: 'pointer',
    transform: 'scale(1.02)',
    transition: 'all 0.2s ease-in-out'
  };
};

/*
Desenvolvido com ❤️ pelo Núcleo de Estudos de Tradução - PIPGLA/UFRJ | Contém código gerado por IA.
*/
